
#ifndef ROGUELIKE__STATE_HPP
#define ROGUELIKE__STATE_HPP

///////////////////////////////////////////////////////////////////////////////
/// Forward declarations for State
///////////////////////////////////////////////////////////////////////////////
class FrameManager;

///////////////////////////////////////////////////////////////////////////////
/// @brief Singleton holding references to different management classes
///////////////////////////////////////////////////////////////////////////////
class State {
public:

    ///////////////////////////////////////////////////////////////////////////
    /// @brief Disable copy constructor
    ///////////////////////////////////////////////////////////////////////////
    State(const State&) = delete;

    ///////////////////////////////////////////////////////////////////////////
    /// @brief Disable assignment operator
    ///////////////////////////////////////////////////////////////////////////
    void operator=(const State&) = delete;

    ///////////////////////////////////////////////////////////////////////////
    /// @brief Returns a reference to the global State instance
    ///
    /// @return A reference to the global State instance
    ///////////////////////////////////////////////////////////////////////////
    static State& get();

private:

    ///////////////////////////////////////////////////////////////////////////
    /// @brief Default constructor
    ///////////////////////////////////////////////////////////////////////////
    State();

    ///////////////////////////////////////////////////////////////////////////
    std::unique_ptr<FrameManager> m_frameManager;
};

#endif
